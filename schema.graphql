# ROOT TYPES
type Query {
  account: Account
  galleries(sortOrder: SortOrder, SortBy: SortGalleryBy): [Gallery]
  gallery (galleryID: Int): Gallery
  photo: Photo
  login (input: loginInput): Account
  s3PreSignedURL (filename: String): S3PreSignedURL
}

type Mutation {
  createAccount(input: createAccountInput): Account
  uploadPhoto (input: photoInput): Photo
  createGallery (input: createGalleryInput): Gallery
  createCompany (input: createCompanyInput): Company
}

# TYPES
type Account {
  accountID: ID!
  firstName: String!
  lastName: String!
  username: String!
  email: String
  phone: Float
  createdAt: String
  company: [Company]
  token: String
}

type Photo {
  photoID: ID
  url: String
  description: String
  clickCount: Float
  createdAt: String
}

type Gallery {
  galleryID: ID
  title: String
  description: String
  clickCount: Float
  createdAt: String
  photos: [Photo]
}

type Company {
  companyID: ID
  name: String
  logo: String
  motto: String
  email: String
  phone: Float
  description: String
  galleries: [Gallery]
}

type S3PreSignedURL {
  url: String
  key: String
}

# INPUT TYPES 
input createAccountInput {
  username: String!
  first_name: String!
  last_name: String!
  password: String!
  email: String
  phone: Float
}

input loginInput {
  username: String!
  password: String!
}

input photoInput {
  url: String!
  gallery_id: Int!
  photo_description: String
}

input createGalleryInput {
  gallery_title: String
  gallery_description: String
  company_id: Int
}

input createCompanyInput {
  company_name: String!
  company_logo: String
  motto: String
  email: String
  phone: String
  company_description: String
}

enum SortGalleryBy {
  galleryID
  title
  description
  clickCount
  createdAt
}

enum SortOrder {
  asc
  desc
}